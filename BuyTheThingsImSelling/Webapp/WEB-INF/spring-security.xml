<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/security
	http://www.springframework.org/schema/security/spring-security-3.2.xsd">

    <!-- enable use-expressions -->
	<http auto-config="true" use-expressions="true">

		<intercept-url pattern="/sell**" access="hasRole('1')" />
		<intercept-url pattern="/admin**" access="hasRole('3')" />
		<intercept-url pattern="/admin/sqlConsole**" access="hasRole('3')" />
		<intercept-url pattern="/rest/json/admin**" access="hasRole('3')" />
		<!-- access denied page -->
		<access-denied-handler error-page="/403" />

		<form-login
		    login-page="/login"
		    default-target-url="/"
			authentication-failure-url="/login?error"
			username-parameter="username"
			password-parameter="password" />
		<logout logout-success-url="/login?logout"  />
		<!-- enable csrf protection -->
		<csrf/>
	</http>

	<!-- Select users and user_roles from database -->
	<authentication-manager>
	  <authentication-provider>
		<jdbc-user-service data-source-ref="dataSource"
		  users-by-username-query= "select email as username, password, 'true' as enabled from users where email=?"
		  authorities-by-username-query= "select users.email as username, roles.role as role from roles join users on users.userid = roles.userid where email = ?" />
	    <password-encoder hash="md5"/>
	  </authentication-provider>
	</authentication-manager>

</beans:beans>