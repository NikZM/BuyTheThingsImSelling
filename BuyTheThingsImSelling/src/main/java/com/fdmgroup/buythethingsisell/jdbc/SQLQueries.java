package com.fdmgroup.buythethingsisell.jdbc;

public enum SQLQueries {
	//INSERT/UPDATE/DELETE STATEMENTS
	AddUser("INSERT INTO USERS (USERID, EMAIL, PASSWORD) VALUES (?, ?, ?)"),
	RemoveUser("DELETE FROM USERS WHERE USERID = ?"),
	UpdateEmail("UPDATE USERS SET EMAIL = ? WHERE USERID = ?"),
	UpdatePassword("UPDATE USERS SET PASSWORD = ? WHERE USERID = ?"),
	AddRoles("INSERT INTO ROLES (USERID, ROLE) VALUES (?,?)"),
	RemoveRoles("DELETE FROM ROLES WHERE USERID = ? AND ROLE = ?"),
	AddUserExInfo("INSERT INTO USERsExINFO (USERID, PAYPALACC)VALUES (?, ?)"),
	UpdatePayPal("UPDATE USERSEXINFO SET PAYPALACC = ? WHERE USERID = ?"),
	AddItem("INSERT INTO ITEMS (ITEMID, TITLE, DESCRIPTION, PRICE, IMGURL) VALUES (?, ?, ?, ?, ?)"),
	AddItemToUser("INSERT INTO USERSITEMS (USERID, ITEMID) VALUES (?,?)"),
	RemoveItem("UPDATE ITEMS SET SHOW = 'N' WHERE ITEMID = ?"),
	AddReview("INSERT INTO REVIEW (REVIEWID, ITEMID, USERID, COMMENTS, RATING) VALUES (REVIEWID_SEQ.nextval, ?, ?, ?, ?)"),
	DeleteReview("DELETE FROM REVIEW WHERE REVIEWID = ?"),
	CreatePurchaseEvent("INSERT INTO TRANSACTIONS (TRANSACID, ITEMID, BUYERID, SELLERID, PRICE) VALUES (TRANSACID_SEQ.nextval, ?, ?, ?, ?)"),
	AddCategory("INSERT INTO CATEGORIES (CATID, NAME) VALUES (CATID_SEQ.nextval, ?)"),
	AddItemToCategory("INSERT INTO ITEMCATEGORY (CATID, ITEMID) VALUES ((SELECT CATID FROM CATEGORIES WHERE NAME = ?), ?)"),
	UpdateItemStock("MERGE INTO STOCKS USING dual ON (ITEMID = ?) WHEN MATCHED THEN UPDATE SET COUNT = ? WHEN NOT MATCHED THEN INSERT (ITEMID, COUNT) VALUES (?, ?)"),
	//SELECTS
	UserIDNextVal("SELECT USERID_SEQ.nextval from dual"),
	ItemIDNextVal("SELECT ITEMID_SEQ.nextval from dual"),
	CatIDNextVal("SELECT ITEMID_SEQ.nextval from dual"),
	GetItem("SELECT it.ITEMID, it.TITLE, it.DESCRIPTION, it.PRICE, it.IMGURL, st.COUNT, usr.EMAIL FROM ITEMS it JOIN STOCKS st ON st.itemid = it.itemid "
			+ "JOIN USERSITEMS ui ON ui.itemid = st.itemid  JOIN USERS usr ON ui.USERID = usr.USERID WHERE it.ITEMID = ?"),
	//MULTI-ROW RETURNS
	GetItemCategories("SELECT CATEGORIES.NAME FROM CATEGORIES JOIN ITEMCATEGORY ON CATEGORIES.CATID = ITEMCATEGORY.CATID WHERE ITEMCATEGORY.ITEMID = ?"),
	GetAllCategories("SELECT NAME FROM CATEGORIES"),
	GetItemReviews("SELECT REVIEWID, EMAIL, COMMENTS, RATING FROM REVIEW JOIN USERS ON REVIEW.USERID = USERS.USERID WHERE ITEMID = ?"),
	//Get List Of All Items With Limit
	GetItemList("SELECT * FROM (SELECT it.ITEMID, it.TITLE, it.DESCRIPTION, it.PRICE, it.IMGURL, st.COUNT, usr.EMAIL, REVS.avgrat, REVS.revcount, ROW_NUMBER() OVER (ORDER BY it.ITEMID DESC) Row_Num FROM ITEMS it LEFT JOIN STOCKS st ON st.itemid = it.itemid "
			+ "LEFT JOIN (SELECT COUNT(REVIEWID) revcount, AVG(RATING) avgrat, MAX(ITEMID) itid FROM REVIEW) REVS ON REVS.itid = st.itemid "
			+ "LEFT JOIN USERSITEMS ui ON ui.itemid = st.itemid LEFT JOIN USERS usr ON ui.USERID = usr.USERID) WHERE Row_Num >= ? AND Row_Num <= ?"),
	GetItemsByCategory("SELECT CATITEMS.ITEMID, TITLE, DESCRIPTION, PRICE, IMGURL, COUNT, EMAIL, AVGRAT, REVCOUNT FROM (SELECT ITEMCATEGORY.ITEMID FROM ITEMCATEGORY JOIN CATEGORIES ON ITEMCATEGORY.CATID = CATEGORIES.CATID "
			+ "WHERE CATEGORIES.NAME LIKE ?) CATITEMS JOIN (SELECT it.ITEMID, it.TITLE, it.DESCRIPTION, it.PRICE, it.IMGURL, st.COUNT, usr.EMAIL, REVS.avgrat, REVS.revcount FROM ITEMS it "
			+ "LEFT JOIN STOCKS st ON st.itemid = it.itemid LEFT JOIN (SELECT COUNT(REVIEWID) revcount, AVG(RATING) avgrat, MAX(ITEMID) itid FROM REVIEW) REVS ON REVS.itid = st.itemid LEFT JOIN USERSITEMS ui ON ui.itemid = st.itemid "
			+ "LEFT JOIN USERS usr ON ui.USERID = usr.USERID) ALLELSE ON ALLELSE.ITEMID = CATITEMS.ITEMID"),
	GetItemsBySellerName("SELECT ITEMID, TITLE, DESCRIPTION, PRICE, IMGURL, COUNT, EMAIL, AVGRAT, REVCOUNT FROM ITEMS it LEFT JOIN STOCKS st ON st.itemid = it.itemid "
			+ "LEFT JOIN (SELECT COUNT(REVIEWID) revcount, AVG(RATING) avgrat, MAX(ITEMID) itid FROM REVIEW) REVS ON REVS.itid = st.itemid LEFT JOIN USERSITEMS ui ON ui.itemid = st.itemid LEFT JOIN USERS usr ON ui.USERID = usr.USERID WHERE EMAIL = ?"),
	GetPageCount("SELECT COUNT(*) FROM items"),
	UpdateItemInfo("UPDATE ITEMS SET TITLE = ?, DESCRIPTION = ?, PRICE = ?, IMGURL = ? WHERE ITEMID = ?"),
	//Deletes
	DropItemCategories("DELETE FROM ITEMCATEGORY WHERE ITEMID = ?"),
	DeleteItemByID("DELETE FROM ITEMS WHERE ITEMID = ?"),
	DeleteUsersItemsByID("DELETE FROM USERSITEMS WHERE ITEMID = ?"),
	DeleteItemStockByID("DELETE FROM STOCKS WHERE ITEMID = ?");
	
	private String query;
	
	SQLQueries(String query) {
        this.query=query;
    }
	
    public String query() {
        return query;
    }
    
}